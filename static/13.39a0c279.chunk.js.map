{"version":3,"sources":["webpack:///static/13.39a0c279.chunk.js","webpack:///./catalog/design-tokens/spacing.md?6751","webpack:///./catalog/design-tokens/spacing.md"],"names":["webpackJsonp","784","module","exports","__webpack_require__","React","createReactClass","PageRenderer","__esModule","default","WrappedPageRenderer","displayName","getInitialState","content","componentWillMount","render","createElement","Object","assign","this","props","state","__catalog_loader__","798"],"mappings":"AAAAA,cAAc,KAERC,IACA,SAAUC,EAAQC,EAASC,GCFjC,GAAAC,GAAAD,EAAA,IACAE,EAAAF,EAAA,IACAG,EAAAH,EAAA,KAAAG,YACAA,GAAAC,aACAD,IAAAE,QAEA,IAAAC,GAAAJ,GACAK,YAAA,sBACAC,gBAAA,WACA,OAAgBC,QAAAT,EAAA,OAEhBU,mBAAA,aAUAC,OAAA,WACA,MAAAV,GAAAW,cAAAT,EAAAU,OAAAC,UAAiEC,KAAAC,OAAeP,QAAAM,KAAAE,MAAAR,aAGhFH,GAAAY,oBAAA,EACApB,EAAAC,QAAAO,GDUMa,IACA,SAAUrB,EAAQC,GEtCxBD,EAAAC,QAAA","file":"static/13.39a0c279.chunk.js","sourcesContent":["webpackJsonp([13],{\n\n/***/ 784:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var React = __webpack_require__(15);\n    var createReactClass = __webpack_require__(45);\n    var PageRenderer = __webpack_require__(289).PageRenderer;\n    if (PageRenderer.__esModule) {\n      PageRenderer = PageRenderer.default;\n    }\n    var WrappedPageRenderer = createReactClass({\n      displayName: 'WrappedPageRenderer',\n      getInitialState: function() {\n        return {content: __webpack_require__(798)};\n      },\n      componentWillMount: function() {\n        var component = this;\n        if (false) {\n          module.hot.accept(\"!!../../node_modules/raw-loader/index.js!./spacing.md\", function() {\n            component.setState({\n              content: require(\"!!../../node_modules/raw-loader/index.js!./spacing.md\")\n            })\n          })\n        }\n      },\n      render: function() {\n        return React.createElement(PageRenderer, Object.assign({}, this.props, {content: this.state.content}));\n      }\n    });\n    WrappedPageRenderer.__catalog_loader__ = true;\n    module.exports = WrappedPageRenderer;\n  \n\n/***/ }),\n\n/***/ 798:\n/***/ (function(module, exports) {\n\nmodule.exports = \"# Catalog Playground\\n\\nCatalog pages are written in ordinary [Markdown]. You can use special code blocks (called [specimens]) to show color palettes, hints, typefaces, or even interactive [React] components. Below are a few examples of specimens you can play around with. In the [documentation][docs] you can find a list of all supported specimens and how to make use of their full potential.\\n\\n## Color Swatches\\nSimple, individual color swatches defined with a name and hex\\n\\n```color\\nspan: 2\\nname: \\\"Light Blue\\\"\\nvalue: \\\"#b0f6ff\\\"\\n```\\n\\n```color\\nspan: 2\\nname: \\\"Dark Blue\\\"\\nvalue: \\\"#2666a4\\\"\\n```\\n\\n```color\\nspan: 2\\nname: \\\"Bright Red\\\"\\nvalue: \\\"#ff5555\\\"\\n```\\n\\n## Color Palettes\\nColor palettes are ideal to define gradient steps or color schemes.\\n\\n```color-palette\\ncolors:\\n   - {value: \\\"#c7eae5\\\"}\\n   - {value: \\\"#80cdc1\\\"}\\n   - {value: \\\"#35978f\\\"}\\n   - {value: \\\"#01665e\\\"}\\n   - {value: \\\"#003c30\\\"}\\n```\\n\\n## Typography\\nThe type specimen is best used to present the ratio and hierarchy of typographical elements like headings.\\n\\n```type\\n{\\n  \\\"headings\\\": [98,28,21,16,14,12],\\n  \\\"font\\\": \\\"sans-serif\\\",\\n  \\\"color\\\": \\\"#333\\\"\\n}\\n```\\n\\n## HTML\\nThe HTML specimen allows the documentation of HTML as well as JavaScript and CSS based views.\\n\\n```html\\n<textarea placeholder='Add your comment' rows='6' cols='50'></textarea>\\n<button style='display:block'>Submit</button>\\n```\\n\\n## Interactive Components\\nThe React specimen lets you document and build React components. Just write JSX code in the specimen content. For documenting interactive components, the React Specimen provides local state and a `setState` function to the specimen code.\\n\\n```react\\nstate: { clicked: 0 }\\n---\\n<button onClick={() => setState({clicked: state.clicked + 1})}>\\n  Clicked {state.clicked} times\\n</button>\\n```\\n\\n## Responsive Container\\nThe HTML is wrapped in a `<iframe>` so that you can test media queries and simulate different devices.\\n\\n```html\\nresponsive: true\\n---\\n<div>\\n<style>\\n  .responsive-grid-example {\\n    padding: 24px;\\n    text-align: center;\\n    background-color: #c2d8ea;\\n    height: 100vh;\\n  }\\n  .responsive-grid-example > h1 {\\n    font-size: 24px;\\n    font-weight: 500;\\n    margin-bottom: 12px;\\n  }\\n  .grid {\\n    display: flex;\\n    flex-direction: column;\\n    flex-wrap: wrap;\\n    justify-content: space-around;\\n  }\\n  .box {\\n    height: 72px;\\n    margin: 0 0 12px 0;\\n    background-color: #205779;\\n  }\\n@media (min-width: 1024px) {\\n  .grid {\\n    flex-direction: row;\\n  }\\n  .box {\\n    height: 144px;\\n    margin: 0 12px 12px 0;\\n  }\\n  .box:nth-child(2n){\\n    margin: 0 0 12px 0;\\n  }\\n}\\n@media (min-width: 1440px) {\\n  .box {\\n    height: 288px;\\n    margin: 0 12px 12px 0;\\n  }\\n  .box:nth-child(2n){\\n    margin: 0 12px 12px 0;\\n  }\\n  .box:nth-child(4n){\\n    margin: 0 0 12px 0;\\n  }\\n}\\n</style>\\n<div class='responsive-grid-example'>\\n  <h1>Responsive Grid Example</h1>\\n  <div class='grid'>\\n    <div class='box'></div>\\n    <div class='box'></div>\\n    <div class='box'></div>\\n    <div class='box'></div>\\n  </div>\\n</div>\\n```\\n\\n[docs]: https://docs.catalog.style/\\n[Markdown]: https://en.wikipedia.org/wiki/Markdown\\n[React]: https://reactjs.org/\\n[specimens]: https://docs.catalog.style/specimens\\n\"\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/13.39a0c279.chunk.js","\n    var React = require('react');\n    var createReactClass = require('create-react-class');\n    var PageRenderer = require('catalog').PageRenderer;\n    if (PageRenderer.__esModule) {\n      PageRenderer = PageRenderer.default;\n    }\n    var WrappedPageRenderer = createReactClass({\n      displayName: 'WrappedPageRenderer',\n      getInitialState: function() {\n        return {content: require(\"!!../../node_modules/raw-loader/index.js!./spacing.md\")};\n      },\n      componentWillMount: function() {\n        var component = this;\n        if (module.hot) {\n          module.hot.accept(\"!!../../node_modules/raw-loader/index.js!./spacing.md\", function() {\n            component.setState({\n              content: require(\"!!../../node_modules/raw-loader/index.js!./spacing.md\")\n            })\n          })\n        }\n      },\n      render: function() {\n        return React.createElement(PageRenderer, Object.assign({}, this.props, {content: this.state.content}));\n      }\n    });\n    WrappedPageRenderer.__catalog_loader__ = true;\n    module.exports = WrappedPageRenderer;\n  \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./catalog/design-tokens/spacing.md\n// module id = 784\n// module chunks = 13","module.exports = \"# Catalog Playground\\n\\nCatalog pages are written in ordinary [Markdown]. You can use special code blocks (called [specimens]) to show color palettes, hints, typefaces, or even interactive [React] components. Below are a few examples of specimens you can play around with. In the [documentation][docs] you can find a list of all supported specimens and how to make use of their full potential.\\n\\n## Color Swatches\\nSimple, individual color swatches defined with a name and hex\\n\\n```color\\nspan: 2\\nname: \\\"Light Blue\\\"\\nvalue: \\\"#b0f6ff\\\"\\n```\\n\\n```color\\nspan: 2\\nname: \\\"Dark Blue\\\"\\nvalue: \\\"#2666a4\\\"\\n```\\n\\n```color\\nspan: 2\\nname: \\\"Bright Red\\\"\\nvalue: \\\"#ff5555\\\"\\n```\\n\\n## Color Palettes\\nColor palettes are ideal to define gradient steps or color schemes.\\n\\n```color-palette\\ncolors:\\n   - {value: \\\"#c7eae5\\\"}\\n   - {value: \\\"#80cdc1\\\"}\\n   - {value: \\\"#35978f\\\"}\\n   - {value: \\\"#01665e\\\"}\\n   - {value: \\\"#003c30\\\"}\\n```\\n\\n## Typography\\nThe type specimen is best used to present the ratio and hierarchy of typographical elements like headings.\\n\\n```type\\n{\\n  \\\"headings\\\": [98,28,21,16,14,12],\\n  \\\"font\\\": \\\"sans-serif\\\",\\n  \\\"color\\\": \\\"#333\\\"\\n}\\n```\\n\\n## HTML\\nThe HTML specimen allows the documentation of HTML as well as JavaScript and CSS based views.\\n\\n```html\\n<textarea placeholder='Add your comment' rows='6' cols='50'></textarea>\\n<button style='display:block'>Submit</button>\\n```\\n\\n## Interactive Components\\nThe React specimen lets you document and build React components. Just write JSX code in the specimen content. For documenting interactive components, the React Specimen provides local state and a `setState` function to the specimen code.\\n\\n```react\\nstate: { clicked: 0 }\\n---\\n<button onClick={() => setState({clicked: state.clicked + 1})}>\\n  Clicked {state.clicked} times\\n</button>\\n```\\n\\n## Responsive Container\\nThe HTML is wrapped in a `<iframe>` so that you can test media queries and simulate different devices.\\n\\n```html\\nresponsive: true\\n---\\n<div>\\n<style>\\n  .responsive-grid-example {\\n    padding: 24px;\\n    text-align: center;\\n    background-color: #c2d8ea;\\n    height: 100vh;\\n  }\\n  .responsive-grid-example > h1 {\\n    font-size: 24px;\\n    font-weight: 500;\\n    margin-bottom: 12px;\\n  }\\n  .grid {\\n    display: flex;\\n    flex-direction: column;\\n    flex-wrap: wrap;\\n    justify-content: space-around;\\n  }\\n  .box {\\n    height: 72px;\\n    margin: 0 0 12px 0;\\n    background-color: #205779;\\n  }\\n@media (min-width: 1024px) {\\n  .grid {\\n    flex-direction: row;\\n  }\\n  .box {\\n    height: 144px;\\n    margin: 0 12px 12px 0;\\n  }\\n  .box:nth-child(2n){\\n    margin: 0 0 12px 0;\\n  }\\n}\\n@media (min-width: 1440px) {\\n  .box {\\n    height: 288px;\\n    margin: 0 12px 12px 0;\\n  }\\n  .box:nth-child(2n){\\n    margin: 0 12px 12px 0;\\n  }\\n  .box:nth-child(4n){\\n    margin: 0 0 12px 0;\\n  }\\n}\\n</style>\\n<div class='responsive-grid-example'>\\n  <h1>Responsive Grid Example</h1>\\n  <div class='grid'>\\n    <div class='box'></div>\\n    <div class='box'></div>\\n    <div class='box'></div>\\n    <div class='box'></div>\\n  </div>\\n</div>\\n```\\n\\n[docs]: https://docs.catalog.style/\\n[Markdown]: https://en.wikipedia.org/wiki/Markdown\\n[React]: https://reactjs.org/\\n[specimens]: https://docs.catalog.style/specimens\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./catalog/design-tokens/spacing.md\n// module id = 798\n// module chunks = 13"],"sourceRoot":""}